<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.utn.elbuensabor.integration.PersonaControllerIntegration" tests="3" skipped="0" failures="0" errors="0" timestamp="2023-10-25T20:36:31" hostname="BOOK-83PFGTMU3M" time="0.192">
  <properties/>
  <testcase name="testCambiarContraseÃ±a()" classname="com.utn.elbuensabor.integration.PersonaControllerIntegration" time="0.082"/>
  <testcase name="testCambiarDatos()" classname="com.utn.elbuensabor.integration.PersonaControllerIntegration" time="0.061"/>
  <testcase name="testRanking()" classname="com.utn.elbuensabor.integration.PersonaControllerIntegration" time="0.045"/>
  <system-out><![CDATA[Hibernate: insert into persona (apellido,email,fecha_alta,fecha_baja,fecha_modificacion,nombre,password,rol,telefono,id) values (?,?,?,?,?,?,?,?,?,default)
Hibernate: select p1_0.id,p1_0.apellido,p1_0.email,p1_0.fecha_alta,p1_0.fecha_baja,p1_0.fecha_modificacion,p1_0.nombre,p1_0.password,p1_0.rol,p1_0.telefono from persona p1_0 where p1_0.id=?
Hibernate: update persona set password=? where id=?
Hibernate: insert into persona (apellido,email,fecha_alta,fecha_baja,fecha_modificacion,nombre,password,rol,telefono,id) values (?,?,?,?,?,?,?,?,?,default)
Hibernate: select p1_0.id,p1_0.apellido,p1_0.email,p1_0.fecha_alta,p1_0.fecha_baja,p1_0.fecha_modificacion,p1_0.nombre,p1_0.password,p1_0.rol,p1_0.telefono from persona p1_0 where p1_0.id=?
Hibernate: update persona set apellido=?,email=?,fecha_alta=?,fecha_baja=?,fecha_modificacion=?,nombre=?,password=?,rol=?,telefono=? where id=?
Hibernate: select d1_0.id_persona,d1_0.id,d1_0.calle,d1_0.codigo_postal,d1_0.fecha_alta,d1_0.fecha_baja,d1_0.fecha_modificacion,d1_0.localidad,d1_0.numero,d1_0.numero_vivienda,d1_0.piso_vivienda from domicilio d1_0 where d1_0.id_persona=?
Hibernate: select p1_0.id_usuario,p1_0.id,d1_0.id,d1_0.calle,d1_0.codigo_postal,d1_0.fecha_alta,d1_0.fecha_baja,d1_0.fecha_modificacion,d1_0.localidad,d1_0.numero,d1_0.numero_vivienda,p2_0.id,p2_0.apellido,p2_0.email,p2_0.fecha_alta,p2_0.fecha_baja,p2_0.fecha_modificacion,p2_0.nombre,p2_0.password,p2_0.rol,p2_0.telefono,d1_0.piso_vivienda,p1_0.estado_actual,p1_0.fecha_alta,p1_0.fecha_baja,p1_0.fecha_modificacion,p1_0.fecha_pedido,p1_0.forma_pago,p1_0.hora_estimada_finalizacion,p1_0.tipo_envio,p1_0.total,p1_0.total_costo from pedido p1_0 left join domicilio d1_0 on d1_0.id=p1_0.id_domicilio_entrega left join persona p2_0 on p2_0.id=d1_0.id_persona where p1_0.id_usuario=?
Hibernate: select n1_0.cliente_id,n1_0.id,f1_0.id,f1_0.fecha_alta,f1_0.fecha_baja,f1_0.fecha_facturacion,f1_0.fecha_modificacion,f1_0.forma_pago,f1_0.mp_merchant_order_id,f1_0.mp_payment_id,f1_0.mp_payment_type,f1_0.mp_preference_id,p1_0.id,c2_0.id,c2_0.apellido,c2_0.email,c2_0.fecha_alta,c2_0.fecha_baja,c2_0.fecha_modificacion,c2_0.nombre,c2_0.password,c2_0.rol,c2_0.telefono,d1_0.id,d1_0.calle,d1_0.codigo_postal,d1_0.fecha_alta,d1_0.fecha_baja,d1_0.fecha_modificacion,d1_0.localidad,d1_0.numero,d1_0.numero_vivienda,p2_0.id,p2_0.apellido,p2_0.email,p2_0.fecha_alta,p2_0.fecha_baja,p2_0.fecha_modificacion,p2_0.nombre,p2_0.password,p2_0.rol,p2_0.telefono,d1_0.piso_vivienda,p1_0.estado_actual,p1_0.fecha_alta,p1_0.fecha_baja,p1_0.fecha_modificacion,p1_0.fecha_pedido,p1_0.forma_pago,p1_0.hora_estimada_finalizacion,p1_0.tipo_envio,p1_0.total,p1_0.total_costo,f1_0.total_venta,n1_0.fecha_alta,n1_0.fecha_baja,n1_0.fecha_modificacion,n1_0.total_monto from nota_credito n1_0 left join factura f1_0 on f1_0.id=n1_0.factura_id left join pedido p1_0 on p1_0.id=f1_0.id_pedido left join persona c2_0 on c2_0.id=p1_0.id_usuario left join domicilio d1_0 on d1_0.id=p1_0.id_domicilio_entrega left join persona p2_0 on p2_0.id=d1_0.id_persona where n1_0.cliente_id=?
Hibernate: insert into persona (apellido,email,fecha_alta,fecha_baja,fecha_modificacion,nombre,password,rol,telefono,id) values (?,?,?,?,?,?,?,?,?,default)
Hibernate: select p1_0.id,p1_0.apellido,p1_0.email,p1_0.fecha_alta,p1_0.fecha_baja,p1_0.fecha_modificacion,p1_0.nombre,p1_0.password,p1_0.rol,p1_0.telefono,count(p2_0.id),sum(f1_0.total_venta) from persona p1_0 left join pedido p2_0 on p1_0.id=p2_0.id_usuario,factura f1_0 where f1_0.id_pedido=p2_0.id and f1_0.fecha_facturacion between ? and ? offset ? rows fetch first ? rows only
Hibernate: select d1_0.id_persona,d1_0.id,d1_0.calle,d1_0.codigo_postal,d1_0.fecha_alta,d1_0.fecha_baja,d1_0.fecha_modificacion,d1_0.localidad,d1_0.numero,d1_0.numero_vivienda,d1_0.piso_vivienda from domicilio d1_0 where d1_0.id_persona=?
Hibernate: select p1_0.id_usuario,p1_0.id,d1_0.id,d1_0.calle,d1_0.codigo_postal,d1_0.fecha_alta,d1_0.fecha_baja,d1_0.fecha_modificacion,d1_0.localidad,d1_0.numero,d1_0.numero_vivienda,p2_0.id,p2_0.apellido,p2_0.email,p2_0.fecha_alta,p2_0.fecha_baja,p2_0.fecha_modificacion,p2_0.nombre,p2_0.password,p2_0.rol,p2_0.telefono,d1_0.piso_vivienda,p1_0.estado_actual,p1_0.fecha_alta,p1_0.fecha_baja,p1_0.fecha_modificacion,p1_0.fecha_pedido,p1_0.forma_pago,p1_0.hora_estimada_finalizacion,p1_0.tipo_envio,p1_0.total,p1_0.total_costo from pedido p1_0 left join domicilio d1_0 on d1_0.id=p1_0.id_domicilio_entrega left join persona p2_0 on p2_0.id=d1_0.id_persona where p1_0.id_usuario=?
Hibernate: select n1_0.cliente_id,n1_0.id,f1_0.id,f1_0.fecha_alta,f1_0.fecha_baja,f1_0.fecha_facturacion,f1_0.fecha_modificacion,f1_0.forma_pago,f1_0.mp_merchant_order_id,f1_0.mp_payment_id,f1_0.mp_payment_type,f1_0.mp_preference_id,p1_0.id,c2_0.id,c2_0.apellido,c2_0.email,c2_0.fecha_alta,c2_0.fecha_baja,c2_0.fecha_modificacion,c2_0.nombre,c2_0.password,c2_0.rol,c2_0.telefono,d1_0.id,d1_0.calle,d1_0.codigo_postal,d1_0.fecha_alta,d1_0.fecha_baja,d1_0.fecha_modificacion,d1_0.localidad,d1_0.numero,d1_0.numero_vivienda,p2_0.id,p2_0.apellido,p2_0.email,p2_0.fecha_alta,p2_0.fecha_baja,p2_0.fecha_modificacion,p2_0.nombre,p2_0.password,p2_0.rol,p2_0.telefono,d1_0.piso_vivienda,p1_0.estado_actual,p1_0.fecha_alta,p1_0.fecha_baja,p1_0.fecha_modificacion,p1_0.fecha_pedido,p1_0.forma_pago,p1_0.hora_estimada_finalizacion,p1_0.tipo_envio,p1_0.total,p1_0.total_costo,f1_0.total_venta,n1_0.fecha_alta,n1_0.fecha_baja,n1_0.fecha_modificacion,n1_0.total_monto from nota_credito n1_0 left join factura f1_0 on f1_0.id=n1_0.factura_id left join pedido p1_0 on p1_0.id=f1_0.id_pedido left join persona c2_0 on c2_0.id=p1_0.id_usuario left join domicilio d1_0 on d1_0.id=p1_0.id_domicilio_entrega left join persona p2_0 on p2_0.id=d1_0.id_persona where n1_0.cliente_id=?
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
